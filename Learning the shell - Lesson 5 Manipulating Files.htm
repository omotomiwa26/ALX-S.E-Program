<!DOCTYPE html>
<html lang="en"><head>

    <title>Learning the shell - Lesson 5: Manipulating Files</title>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta name="description" content="In this tutorial, we look at how to copy, rename, and delete files and directories.">
    <meta name="keywords" content="linux, shell, bash, file manipulation commands, cp, mv, rm, mkdir, copy files, move files, rename files, delete files, delete directories, create directories">
    <meta name="author" content="William Shotts, Jr.">
    <meta name="copyright" content="Copyright 2000-2023, William Shotts, Jr.">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" type="image/png" href="http://linuxcommand.org/favicon.png">
    <link rel="stylesheet" type="text/css" href="Learning%20the%20shell%20-%20Lesson%205%20Manipulating%20Files_files/linuxcommand5.css">
    <link rel="prev" href="http://linuxcommand.org/lc3_lts0040.php">
    <link rel="next" href="http://linuxcommand.org/lc3_lts0060.php">
    <link rel="contents" href="http://linuxcommand.org/lc3_learning_the_shell.php#contents">
    </head>

    <body>

    <div class="grid-container">
    <div class="colorblock-red">
    </div><!-- colorblock-red -->
    <div class="title-img">
    </div><!-- title-img -->
    <div class="colorblock-white">
    <div class="navbar">
      <ul style="line-height: 150%;">
        <li><a href="http://linuxcommand.org/index.php">Home</a></li>
        <li><a href="http://linuxcommand.org/lc3_learning_the_shell.php">Learning&nbsp;the&nbsp;Shell</a></li>
        <li><a href="http://linuxcommand.org/lc3_writing_shell_scripts.php">Writing&nbsp;Shell&nbsp;Scripts</a></li>
        <li><a href="http://linuxcommand.org/lc3_resources.php">Resources</a></li>
        <li><a href="http://linuxcommand.org/tlcl.php">Books</a></li>
        <li><a href="http://linuxcommand.org/lc3_adventures.php">Adventures</a></li>
      </ul>
      <hr>
      <ul>
        <li><a href="https://lcorg.blogspot.com/">Blog</a></li>
      </ul>
    </div><!-- navbar -->
  
    </div><!-- colorblock-white -->

    <div id="top" class="main">
    <div class="pagenav">
      <div class="homebutton">
      <a href="http://linuxcommand.org/index.php">Home</a> |
      </div>
      <a href="http://linuxcommand.org/lc3_lts0040.php">Previous</a> | <a href="http://linuxcommand.org/lc3_learning_the_shell.php#contents">Contents</a> | <a href="http://linuxcommand.org/lc3_lts0060.php">Next</a>
    </div>
<h1>Manipulating Files</h1>

<p>This lesson will introduce the following
commands:</p>

<ul>
  <li><code class="user"><a href="http://linuxcommand.org/lc3_man_pages/cp1.html">cp</a></code> - copy files and directories</li>

  <li><code class="user"><a href="http://linuxcommand.org/lc3_man_pages/mv1.html">mv</a></code> - move or rename files and directories</li>

  <li><code class="user"><a href="http://linuxcommand.org/lc3_man_pages/rm1.html">rm</a></code> - remove files and directories</li>

  <li><code class="user"><a href="http://linuxcommand.org/lc3_man_pages/mkdir1.html">mkdir</a></code> - create directories</li>
</ul>

<p>These four commands are among the most frequently used Linux commands. They
are the basic commands for manipulating both files and directories.</p>

<p>Now, to be frank, some of the tasks performed by these commands are more
easily done with a graphical file manager. With a file manager, you can drag
and drop a file from one directory to another, cut and paste files, delete
files, etc. So why use these old command line programs?</p>

<p>The answer is power and flexibility. While it is easy to perform simple file
manipulations with a graphical file manager, complicated tasks can be easier
with the command line programs. For example, how would you copy all the HTML
files from one directory to another, but only copy files that did not exist in
the destination directory or were newer than the versions in the destination
directory? Pretty hard with with a file manager.  Pretty easy with the command
line:</p>

<div class="display">[me@linuxbox me]$ <code class="cmd">cp -u *.html destination</code></div>

<h2>Wildcards</h2>

<p>Before we begin with our commands, we'll first look at a shell feature that
makes these commands so powerful. Since the shell uses filenames so much, it
provides special characters to help you rapidly specify groups of filenames.
These special characters are called <i>wildcards</i>. Wildcards allow you to
select filenames based on patterns of characters. The table below lists the
wildcards and what they select:<br> <br> </p>

<div style="overflow-x: auto"><table>
  <caption>
    Summary of wildcards and their meanings
  </caption>

  <tbody><tr>
    <th><strong>Wildcard</strong></th>
    <th><strong>Meaning</strong></th>
  </tr>

  <tr>
    <td><strong>*</strong></td>
    <td>Matches any characters</td>
  </tr>

  <tr>
    <td><strong>?</strong></td>
    <td>Matches any single character</td>
  </tr>

  <tr>
    <td><strong>[<i>characters</i>]</strong></td>

    <td>Matches any character that is a member of
    the set <i>characters</i>. The set of
    characters may also be expressed as a <i>POSIX
    character class</i> such as one of the following:
    <table>
      <caption>POSIX Character Classes</caption>
      <tbody><tr>
        <td><strong>[:alnum:]</strong></td>
        <td>Alphanumeric characters</td>
      </tr>
      <tr>
        <td><strong>[:alpha:]</strong></td>
        <td>Alphabetic characters</td>
      </tr>
      <tr>
        <td><strong>[:digit:]</strong></td>
        <td>Numerals</td>
      </tr>
      <tr>
        <td><strong>[:upper:]</strong></td>
        <td>Uppercase alphabetic characters</td>
      </tr>
      <tr>
        <td><strong>[:lower:]</strong></td>
        <td>Lowercase alphabetic characters</td>
      </tr>
    </tbody></table>
    </td>
  </tr>

  <tr>
    <td><strong>[!<i>characters</i>]</strong></td>
    <td>Matches any character that is not a member
    of the set <i>characters</i></td>
  </tr>
</tbody></table></div>

<p>Using wildcards, it is possible to construct
very sophisticated selection criteria for
filenames. Here are some examples of patterns and
what they match:<br>
<br>
</p>

<div style="overflow-x: auto"><table>
  <caption>Examples of wildcard matching</caption>

  <tbody><tr>
    <th><strong>Pattern</strong></th>
    <th><strong>Matches</strong></th>
  </tr>

  <tr>
    <td>
    <code class="bold">*</code>
    </td>

    <td>
    <p>All filenames</p>
    </td>
  </tr>

  <tr>
    <td>
    <code class="bold">g*</code>
    </td>

    <td>
    <p>All filenames that begin with the
    character "g"</p>
    </td>
  </tr>

  <tr>
    <td>
    <code class="bold">b*.txt</code>
    </td>

    <td>
    <p>All filenames that begin with the
    character "b" and end with the characters
    ".txt"</p>
    </td>
  </tr>

  <tr>
    <td>
    <code class="bold">Data???</code>
    </td>

    <td>
    <p>Any filename that begins with the
    characters "Data" followed by exactly 3 more
    characters</p>
    </td>
  </tr>

  <tr>
    <td>
    <code class="bold">[abc]*</code>
    </td>

    <td>
    <p>Any filename that begins with "a" or "b"
    or "c" followed by any other characters</p>
    </td>
  </tr>

  <tr>
    <td>
    <code class="bold">[[:upper:]]*</code>
    </td>

    <td>
    <p>Any filename that begins with an uppercase
    letter. This is an example of a character class.</p>
    </td>
  </tr>

  <tr>
    <td>
    <code class="bold">BACKUP.[[:digit:]][[:digit:]]</code>
    </td>

    <td>
    <p>Another example of character classes. This pattern
    matches any filename that begins with the
    characters "BACKUP." followed by exactly two
    numerals.</p>
    </td>
  </tr>

  <tr>
    <td>
    <code class="bold">*[![:lower:]]</code>
    </td>

    <td>
    <p>Any filename that does not end with a
    lowercase letter.</p>
    </td>
  </tr>
</tbody></table></div>

<p>We can use wildcards with any command that
accepts filename arguments.</p>

<h2>cp</h2>

<p>The <code class="user">cp</code> program copies
files and directories. In its simplest form, it
copies a single file:</p>

<div class="display">[me@linuxbox me]$ <code class="cmd">cp <i>file1 file2</i></code></div>

<p>It can also be used to copy multiple files (and/or directories) to a
different directory:</p>

<div class="display">[me@linuxbox me]$ <code class="cmd">cp <i>file... directory</i></code></div>

<p><b>A note on notation:</b> ... signifies that an item can be
repeated one or more times.</p>

<p>Other useful examples of <code class="user">cp</code> and its options include:<br>
<br>
</p>

<div style="overflow-x: auto"><table>
  <caption>Examples of the cp command</caption>

  <tbody><tr>
    <th><strong>Command</strong></th>
    <th><strong>Results</strong></th>
  </tr>

  <tr>
    <td><code class="bold">cp <i>file1 file2</i></code></td>

    <td>Copies the contents of <i>file1</i> into
    <i>file2</i>. If <i>file2</i> does not exist,
    it is created; <b>otherwise, <i>file2</i> is
    silently overwritten with the contents of
    <i>file1</i>.</b></td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">cp -i <i>file1 file2</i></code></span></td>

    <td>Like above however, since the "-i"
    (interactive) option is specified, if
    <i>file2</i> exists, the user is prompted
    before it is overwritten with the contents of
    <i>file1</i>.</td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">cp <i>file1 dir1</i></code></span></td>

    <td>Copy the contents of <i>file1</i> (into a
    file named <i>file1</i>) inside of directory
    <i>dir1</i>.</td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">cp -R <i>dir1 dir2</i></code></span></td>

    <td>Copy the contents of the directory
    <i>dir1</i>. If directory <i>dir2</i> does
    not exist, it is created. Otherwise, it
    creates a directory named <i>dir1</i> within
    directory <i>dir2</i>.</td>
  </tr>
</tbody></table></div>

<h2>mv</h2>

<p>The <code class="user">mv</code> command moves or renames
files and directories depending on how it is
used. It will either move one or more files to a
different directory, or it will rename a file or
directory. To rename a file, it is used like
this:</p>

<div class="display">[me@linuxbox me]$ <code class="cmd">mv <i>filename1 filename2</i></code></div>

<p>To move files (and/or directories) to a different directory:</p>

<div class="display">[me@linuxbox me]$ <code class="cmd">mv <i>file... directory</i></code></div>

<p>Examples of <code class="user">mv</code> and its
options include:<br>
<br>
</p>

<div style="overflow-x: auto"><table>
  <caption>Examples of the mv command</caption>

  <tbody><tr>
    <th><strong>Command</strong></th>
    <th><strong>Results</strong></th>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">mv <i>file1 file2</i></code></span></td>

    <td>If <i>file2</i> does not exist, then
    <i>file1</i> is renamed <i>file2</i>. <b>If
    <i>file2</i> exists, its contents are
    silently replaced with the contents of
    <i>file1</i>.</b></td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">mv -i <i>file1 file2</i></code></span></td>

    <td>Like above however, since the "-i"
    (interactive) option is specified, if
    <i>file2</i> exists, the user is prompted
    before it is overwritten with the contents of
    <i>file1</i>.</td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">mv <i>file1 file2 dir1</i></code></span></td>

    <td>The files <i>file1</i> and <i>file2 </i> are
    moved to directory <i>dir1</i>. If <i>dir1</i>
    does not exist, <code class="user">mv</code> will
    exit with an error.</td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">mv <i>dir1 dir2</i></code></span></td>

    <td>If <i>dir2</i> does not exist, then
    <i>dir1</i> is renamed <i>dir2</i>. If
    <i>dir2</i> exists, the directory <i>dir1</i>
    is moved within directory <i>dir2</i>.</td>
  </tr>
</tbody></table></div>

<h2>rm</h2>

<p>The <code class="user">rm</code> command removes (deletes)
files and directories.</p>

<div class="display">[me@linuxbox me]$ <code class="cmd">rm <i>file...</i></code></div>

<p>Using the recursive option (<code>-r</code>), <code class="user">rm</code>
can also be used to delete directories:</p>

<div class="display">[me@linuxbox me]$ <code class="cmd">rm -r <i>directory...</i></code></div>

<p>Examples of <code class="user">rm</code> and its
options include:<br>
<br>
</p>

<div style="overflow-x: auto"><table>
  <caption>Examples of the rm command</caption>

  <tbody><tr>
    <th><strong>Command</strong></th>
    <th><strong>Results</strong></th>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">rm <i>file1 file2</i></code></span></td>

    <td>Delete <i>file1</i> and <i>file2</i>. </td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">rm -i <i>file1 file2</i></code></span></td>

    <td>Like above however, since the "-i"
    (interactive) option is specified, the user
    is prompted before each file is deleted.</td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">rm -r <i>dir1 dir2</i></code></span></td>

    <td>Directories <i>dir1</i> and <i>dir2</i>
    are deleted along with all of their
    contents.</td>
  </tr>
</tbody></table></div><br>

<div class="warning">
<h2>Be careful with rm!</h2>

<p>Linux does not have an undelete
command. Once you delete something with <code class="user">rm</code>, it's gone. You can inflict terrific
damage on your system with <code class="user">rm</code>
if you are not careful, particularly with
wildcards.</p>

<p><b><i>Before you use <code class="user">rm</code> with wildcards, try this helpful
trick:</i></b> construct your command using <code class="user">ls</code> instead. By doing this, you can see
the effect of your wildcards before you delete
files. After you have tested your command with <code class="user">ls</code>, recall the command with the
up-arrow key and then substitute <code class="user">rm</code> for <code class="user">ls</code> in the
command.</p>
</div>

<h2>mkdir</h2>

<p>The <code class="user">mkdir</code> command is used
to create directories. To use it, you simply
type:</p>

<div class="display">[me@linuxbox me]$ <code class="cmd">mkdir <i>directory...</i></code></div>

<h2>Using Commands with Wildcards</h2>

<p>Since the commands we have covered here accept multiple
file and directories names as arguments, you can use wildcards to
specify them. Here are a few examples:</p>

<div style="overflow-x: auto"><table>
  <caption>Command examples using wildcards</caption>

  <tbody><tr>
    <th><strong>Command</strong></th>
    <th><strong>Results</strong></th>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">cp *.txt text_files</code></span></td>

    <td>Copy all files in the current working directory with names
    ending with the characters ".txt" to an existing directory named
    <i>text_files</i>.</td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">mv dir1 ../*.bak dir2</code></span></td>

    <td>Move the subdirectory <i>dir1</i> and all the files ending
    in ".bak" in the current working directory's parent directory
    to an existing directory named <i>dir2</i>.</td>
  </tr>

  <tr>
    <td><span style="white-space: nowrap"><code class="bold">rm *~</code></span></td>

    <td>Delete all files in the current working directory that end
    with the character "~". Some applications create backup files
    using this naming scheme. Using this command will clean them
    out of a directory.</td>
  </tr>
</tbody></table></div>

<h2>Further Reading</h2>

<ul>
  <li>Chapter 4 of <a href="http://linuxcommand.org/tlcl.php"><i>The Linux Command Line</i></a> covers this topic in more detail</li>
</ul>

    <div class="pagenav">
      <a href="#top">Top</a> | <a href="http://linuxcommand.org/lc3_lts0040.php">Previous</a> | <a href="http://linuxcommand.org/lc3_learning_the_shell.php#contents">Contents</a> | <a href="http://linuxcommand.org/lc3_lts0060.php">Next</a>
    </div>
<div class="footer">
<hr>
<p class="fineprint">
© 2000-2023,
<a href="mailto:bshotts@users.sourceforge.net">William E. Shotts, Jr.</a>
Verbatim copying and distribution of this entire article is
permitted in any medium, provided this copyright notice is preserved.</p>
<p class="fineprint">Linux® is a registered trademark of Linus Torvalds.</p>
</div><!-- footer -->
</div><!-- main -->
</div><!-- grid-container -->


</body></html>